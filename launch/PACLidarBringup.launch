<launch>
        <!-- args -->
        <arg name="pac_lidar_ip"          default="192.168.1.199" />
        <arg name="pac_lidar_port"        default="5000"          />
        <arg name="link_timeout_sec"      default="10" doc="Connection second timeout" />
        <arg name="pac_lidar_speed"       default="10"    doc="Scan Rate 10 15 20 hz" />
        <arg name="pac_lidar_filter_lev"  default="3"  doc="Filtering level(0-6)" />
        <arg name="pac_lidar_scan_topic"  default="/scan"         />
        <arg name="pac_lidar_state_topic" default="pacLidar_state" />
        <arg name="pac_lidar_ctrl_srv"    default="pacLidar_ctrl"  />
        <arg name="pac_lidar_frame_id"    default="paclidar_link" /> 
        <arg name="base_frame_id"         default="base_link"     />
        <arg name="pac_lidar_range_min"   default="0.00"          />
        <arg name="pac_lidar_range_max"   default="60.0"          />
        <arg name="pac_angular_resolution" default="1" doc="1 2 4,means 0.625/0.125/0.25 resolution"/>
        <arg name="point_tear_optimize"   default = "false" doc="point cloud tear optimize.For 'true',the data of 315-320 degree will be dropped" />
        <arg name="pac_data_start_angle"  default="0" doc="This 2 args use to split data as you want[start,end).The start degree data.Range:0-360, must less than [pac_lidar_end_angle]" />
        <arg name="pac_data_end_angle"    default="360" doc="The end degree data.0-360 must greater than or equal to it [pac_lidar_start_angle]" />

        <!-- start driver node -->
        <node name="driver_node" pkg="paclidar_driver" type="driver_node" output="screen" required="true">
            <param name = "pac_lidar_ip"            type = "string" value = "$(arg pac_lidar_ip)"           />
            <param name = "pac_lidar_port"          type = "int"    value = "$(arg pac_lidar_port)"         />
            <param name = "link_timeout_sec"        type = "int"    value = "$(arg link_timeout_sec)"       />
            <param name = "pac_lidar_speed"         type = "int"    value = "$(arg pac_lidar_speed)"        />
            <param name = "pac_lidar_filter_lev"    type = "int"    value = "$(arg pac_lidar_filter_lev)"   />
            <param name = "pac_lidar_scan_topic"    type = "string" value = "$(arg pac_lidar_scan_topic)"   />
            <param name = "pac_lidar_state_topic"   type = "string" value = "$(arg pac_lidar_state_topic)"  />
            <param name = "pac_lidar_ctrl_srv"      type = "string" value = "$(arg pac_lidar_ctrl_srv)"     />
            <param name = "pac_lidar_frame_id"      type = "string" value = "$(arg pac_lidar_frame_id)"     />
            <param name = "pac_lidar_range_min"     type = "double" value = "$(arg pac_lidar_range_min)"    />
            <param name = "pac_lidar_range_max"     type = "double" value = "$(arg pac_lidar_range_max)"    />
            <param name = "pac_angular_resolution"  type = "int"    value = "$(arg pac_angular_resolution)" />
            <param name = "point_tear_optimize"     type = "bool"   value = "$(arg point_tear_optimize)"    />
            <param name = "pac_data_start_angle"    type = "int"    value = "$(arg pac_data_start_angle)"   />
            <param name = "pac_data_end_angle"      type = "int"    value = "$(arg pac_data_end_angle)"   />
        </node>

        <!-- tf -->
        <node pkg="tf" type="static_transform_publisher" name="base_link_to_paclidar"
        args="0 0 0 0 0 0 $(arg base_frame_id) $(arg pac_lidar_frame_id) 100" />
</launch>